version: '3'

services:
  # Frontend Web Server
  frontend:
    build: ./frontend
    ports:
      - "8081:5000"
    depends_on:
      - backend-api
    networks:
      - retail-network
    restart: always

  # Backend API Server
  backend-api:
    build: ./backend
    ports:
      - "5001:5001"
    depends_on:
      - postgres-db
      - mysql-db
    networks:
      - retail-network
    restart: always
    volumes:
      - ./backend:/app

  # PostgreSQL Database
  postgres-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=retail
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - retail-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  # MySQL Database
  mysql-db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=retail_dw
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=mysql_password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    networks:
      - retail-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "mysql", "-pmysql_password"]
      interval: 5s
      retries: 5

networks:
  retail-network:
    driver: bridge

volumes:
  postgres-data:
  mysql-data: 